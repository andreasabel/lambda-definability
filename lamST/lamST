# λST

## Syntax

Size  i, j
  ::= x            (size variable)
    | ↑ i          (successor)
    | ∞            (limit)


Size Context Δ
  := List of size variables with bounds


Type  T, U
  ::= ℕ i          (sized natural)
    | 𝕊 i          (sized stream)
    | T ⇒ U        (function)
    | ∀ x<i. T     (bounded size quantification)


Type Context Γ
  := List of term variables with types


Term  t, u, v
  ::= x            (term variable)
    | λ x:T. t     (lambda)
    | t u          (application)
    | Λ x<i. t     (size abstraction)
    | t @i         (size application)
    | 0            (zero)
    | S            (successor)
    | caseℕ[T]     (case analysis for ℕ at type T)
    | cons         (stream construction)
    | head         (stream head)
    | tail         (stream tail)
    | fix[T]       (fixpoint at type T)


## Typing

### Δ ⊢ i size

x<i ∈ Δ
----------
Δ ⊢ x size

Δ ⊢ i size
------------
Δ ⊢ ↑ i size

----------
Δ ⊢ ∞ size


### Δ ⊢ A type

Δ ⊢ i size
------------
Δ ⊢ ℕ i type
Δ ⊢ 𝕊 i type

Δ ⊢ T type
Δ ⊢ U type
--------------
Δ ⊢ T ⇒ U type

Δ ⊢ i size
Δ,x<i ⊢ T type
-----------------
Δ ⊢ ∀ x<i. T type


### Δ ⊢ i ≤ j

---------
Δ ⊢ i ≤ i

Δ ⊢ i ≤ j
-------------
Δ ⊢ ↑ i ≤ ↑ j

Δ ⊢ i < j
-----------
Δ ⊢ ↑ i ≤ j


### Δ ⊢ i < j

x<i ∈ Δ
---------
Δ ⊢ x < i

--------- (TODO: what if i = ∞?)
Δ ⊢ i < ∞

Δ ⊢ s ≤ t
-------------
Δ ⊢ s < ↑ t


### Δ ⊢ T ≼ U

Δ ⊢ i ≤ j
-------------
Δ ⊢ ℕ i ≼ ℕ j

Δ ⊢ i ≥ j
-------------
Δ ⊢ 𝕊 i ≼ 𝕊 j

Δ ⊢ T ≽ T′
Δ ⊢ U ≼ U′
-------------------
Δ ⊢ T ⇒ U ≼ T′ ⇒ U′

Δ,x<i ⊢ T ≼ U
-----------------------
Δ ⊢ ∀ x<i. T ≼ ∀ x<i. U


### Δ; Γ ⊢ t : T

Δ; Γ ⊢ t : T
Δ ⊢ T ≼ U
------------ ≼
Δ; Γ ⊢ t : U

x:T ∈ Γ 
------------ var
Δ; Γ ⊢ x : T

Δ; Γ,x:T ⊢ t : U
Δ ⊢ T type
------------------------- λ
Δ; Γ ⊢ λ (x:T). t : T ⇒ U

Δ; Γ ⊢ t : T ⇒ U
Δ; Γ ⊢ u : T
---------------- app
Δ; Γ ⊢ t u : U

Δ,x<i; Γ ⊢ t : T
Δ ⊢ i size
-------------------------- Λ
Δ; Γ ⊢ Λ x<i. t : ∀ x<i. t

Δ, Γ ⊢ t : ∀ x<i. T
Δ ⊢ j < i
------------------------ @
Δ, Γ ⊢ t @j : T[x := j]

--------------------- 0
Δ; Γ ⊢ 0 : ∀ x<∞. ℕ x

---------------------------------- S
Δ; Γ ⊢ S : ∀ x<∞. ∀ y<x. ℕ y ⇒ ℕ x

Δ ⊢ T type
------------------------------------------------------- caseℕ
Δ; Γ ⊢ caseℕ[T] : ∀ x<∞. T ⇒ (∀ y<x. ℕ y ⇒ T) ⇒ ℕ x ⇒ T

--------------------------------------------- cons
Δ; Γ ⊢ cons : ∀ x<∞. ℕ ∞ ⇒ (∀ y<x. 𝕊 y) ⇒ 𝕊 x

------------------------------- head
Δ ; Γ ⊢ head : ∀ x<∞. 𝕊 x ⇒ ℕ ∞

-------------------------------------- tail
Δ ; Γ ⊢ tail : ∀ x<∞. ∀ y<x. 𝕊 x ⇒ 𝕊 y

Δ,x<∞ ⊢ T x type
----------------------------------------------- fix
fix[T] : (∀ x<∞. (∀y<x. T y) ⇒ T x) ⇒ ∀x<∞. T x
